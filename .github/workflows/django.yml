name: Django Plus Behave CI

on: [push, pull_request]

#   push:
#     branches: [ main, test ]
#   pull_request:
#     branches: [ main, test ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6]
        
    services:
      db_service:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: sharedspace
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev

      - name: Run tests and generate report
        run: |
          pipenv run coverage run --source='.' manage.py test
          pipenv run coverage report
          pipenv run coverage xml 
        env:
          TEST_DB_HOST: localhost
          TEST_DB_NAME: sharedspace
          TEST_DB_PASS: postgres
          TEST_DB_PORT: 5432
          TEST_DB_USER: postgres
          SHARED_SPACE_ADMIN_PASSWORD: ${{ secrets.SHARED_SPACE_ADMIN_PASSWORD }}
          SHARED_SPACE_GOOGLE_CLIENT_ID: ${{ secrets.SHARED_SPACE_GOOGLE_CLIENT_ID }}
          SHARED_SPACE_GOOGLE_SECRET: ${{ secrets.HARED_SPACE_GOOGLE_SECRET }}
      
      - name: Update Coverage to Codecov
        uses: codecov/codecov-action@v1
